Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.5.1\"\r\nkotlin = \"1.9.0\"\r\ncoreKtx = \"1.13.1\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\nactivity = \"1.9.1\"\r\nconstraintlayout = \"2.1.4\"\r\nlifecycleLivedataKtx = \"2.6.1\"\r\nlifecycleViewmodelKtx = \"2.6.1\"\r\nnavigationFragmentKtx = \"2.6.0\"\r\nnavigationUiKtx = \"2.6.0\"\r\nlegacySupportV4 = \"1.0.0\"\r\nfragmentKtx = \"1.5.6\"\r\n\r\n[libraries]\r\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nandroidx-appcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nandroidx-activity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nandroidx-constraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\nandroidx-lifecycle-livedata-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-livedata-ktx\", version.ref = \"lifecycleLivedataKtx\" }\r\nandroidx-lifecycle-viewmodel-ktx = { group = \"androidx.lifecycle\", name = \"lifecycle-viewmodel-ktx\", version.ref = \"lifecycleViewmodelKtx\" }\r\nandroidx-navigation-fragment-ktx = { group = \"androidx.navigation\", name = \"navigation-fragment-ktx\", version.ref = \"navigationFragmentKtx\" }\r\nandroidx-navigation-ui-ktx = { group = \"androidx.navigation\", name = \"navigation-ui-ktx\", version.ref = \"navigationUiKtx\" }\r\nandroidx-legacy-support-v4 = { group = \"androidx.legacy\", name = \"legacy-support-v4\", version.ref = \"legacySupportV4\" }\r\nandroidx-fragment-ktx = { group = \"androidx.fragment\", name = \"fragment-ktx\", version.ref = \"fragmentKtx\" }\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 746036643a9b35df0cff9a6a2e246362ae1f3ccb)
+++ b/gradle/libs.versions.toml	(date 1728420337621)
@@ -1,5 +1,5 @@
 [versions]
-agp = "8.5.1"
+agp = "8.6.0"
 kotlin = "1.9.0"
 coreKtx = "1.13.1"
 junit = "4.13.2"
Index: app/src/main/java/com/example/hotelplayaparadise_appmovil/ApiAdapterConsult1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.hotelplayaparadise_appmovil;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport java.util.List;\r\n\r\n// Adaptador para RecyclerView en Java\r\npublic class ApiAdapterConsult1 extends RecyclerView.Adapter<ApiAdapterConsult1.ApiViewHolder> {\r\n\r\n    private List<ApiConsulta1> dataList;\r\n\r\n    // Constructor del adaptador, recibe la lista de datos\r\n    public ApiAdapterConsult1(List<ApiConsulta1> dataList) {\r\n        this.dataList = dataList;\r\n    }\r\n\r\n    // Clase interna que representa el ViewHolder, que contiene las vistas de cada ítem\r\n    public static class ApiViewHolder extends RecyclerView.ViewHolder {\r\n        TextView idTextView;\r\n        TextView nameTextView;\r\n        TextView ageTextView;\r\n\r\n        public ApiViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            idTextView = itemView.findViewById(R.id.item_id);\r\n            nameTextView = itemView.findViewById(R.id.item_name);\r\n            ageTextView = itemView.findViewById(R.id.item_age);\r\n        }\r\n    }\r\n\r\n    // Crea nuevas vistas (invocada por el layout manager)\r\n    @NonNull\r\n    @Override\r\n    public ApiViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        // Inflamos el layout del ítem\r\n        View itemView = LayoutInflater.from(parent.getContext())\r\n                .inflate(R.layout.item_recyclerview, parent, false);\r\n        return new ApiViewHolder(itemView);\r\n    }\r\n\r\n    // Reemplaza el contenido de una vista (invocada por el layout manager)\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ApiViewHolder holder, int position) {\r\n        // Obtener el elemento de la lista en la posición actual y reemplazar el contenido de la vista\r\n        ApiConsulta1 currentItem = dataList.get(position);\r\n\r\n        holder.idTextView.setText(String.valueOf(currentItem.getCount()));\r\n        holder.nameTextView.setText(currentItem.getName());\r\n        holder.ageTextView.setText(String.valueOf(currentItem.getAge()));\r\n    }\r\n\r\n    // Devuelve el tamaño de tu dataset (invocado por el layout manager)\r\n    @Override\r\n    public int getItemCount() {\r\n        return dataList.size();\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/hotelplayaparadise_appmovil/ApiAdapterConsult1.java b/app/src/main/java/com/example/hotelplayaparadise_appmovil/ApiAdapterConsult1.java
--- a/app/src/main/java/com/example/hotelplayaparadise_appmovil/ApiAdapterConsult1.java	(revision 746036643a9b35df0cff9a6a2e246362ae1f3ccb)
+++ b/app/src/main/java/com/example/hotelplayaparadise_appmovil/ApiAdapterConsult1.java	(date 1728419902767)
@@ -12,7 +12,7 @@
 // Adaptador para RecyclerView en Java
 public class ApiAdapterConsult1 extends RecyclerView.Adapter<ApiAdapterConsult1.ApiViewHolder> {
 
-    private List<ApiConsulta1> dataList;
+    private final List<ApiConsulta1> dataList;
 
     // Constructor del adaptador, recibe la lista de datos
     public ApiAdapterConsult1(List<ApiConsulta1> dataList) {
Index: app/src/main/java/com/example/hotelplayaparadise_appmovil/Consulta1.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.hotelplayaparadise_appmovil\r\n\r\nimport android.os.Bundle\r\nimport android.provider.Settings\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Toast\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.example.hotelplayaparadise_appmovil.databinding.FragmentConsulta1Binding\r\nimport com.github.kittinunf.fuel.Fuel\r\nimport com.github.kittinunf.result.Result\r\nimport com.google.gson.Gson\r\n\r\nclass Consulta1 : Fragment() {\r\n\r\n    private var param1: String? = null\r\n    private var param2: String? = null\r\n\r\n    private var _binding: FragmentConsulta1Binding? = null\r\n    private val binding get() = _binding!!\r\n\r\n    // Lista de datos para el RecyclerView\r\n    private val dataList = mutableListOf<ApiConsulta1>()\r\n\r\n    // Adapter para RecyclerView\r\n    private lateinit var adapter: ApiAdapterConsult1\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        arguments?.let {\r\n            param1 = it.getString(ARG_PARAM1)\r\n            param2 = it.getString(ARG_PARAM2)\r\n        }\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        // Usamos ViewBinding para inflar el layout\r\n        _binding = FragmentConsulta1Binding.inflate(inflater, container, false)\r\n        val view = binding.root\r\n\r\n        // Configurar RecyclerView\r\n        setupRecyclerView()\r\n\r\n        // Hacer la solicitud a la API al hacer clic en el botón\r\n        binding.btnGetData.setOnClickListener {\r\n            fetchDataFromApi()\r\n        }\r\n\r\n        return view\r\n    }\r\n\r\n    private fun setupRecyclerView() {\r\n        // Inicializamos el adaptador y configuramos el RecyclerView\r\n        adapter = ApiAdapterConsult1(dataList)  // Usa tu lista global\r\n        binding.recyclerView.layoutManager = LinearLayoutManager(context)\r\n        binding.recyclerView.adapter = adapter\r\n    }\r\n\r\n    private fun fetchDataFromApi() {\r\n        // URL de la API\r\n        val url = \"https://api.example.com/data\"\r\n\r\n        // Hacemos la petición GET usando Fuel\r\n        Fuel.get(url).responseString { _, _, result ->\r\n            when (result) {\r\n                is Result.Failure -> {\r\n                    // Manejar errores en la petición\r\n                    val ex = result.getException()\r\n                    Log.e(\"API_ERROR\", \"Error al hacer la solicitud: ${ex.message}\")\r\n                    Toast.makeText(context, \"Error al obtener datos\", Toast.LENGTH_SHORT).show()\r\n                }\r\n                is Result.Success -> {\r\n                    // Procesar la respuesta JSON\r\n                    val data = result.get()\r\n                    Log.d(\"API_RESPONSE\", \"Respuesta de la API: $data\")\r\n\r\n                    // Usamos Gson para convertir el JSON en una lista de ApiResponse\r\n                    try {\r\n                        val gson = Gson()\r\n                        val apiResponseList = gson.fromJson(data, Array<ApiConsulta1>::class.java).toList()\r\n\r\n                        // Limpiamos la lista y añadimos los nuevos datos\r\n                        dataList.clear()\r\n                        dataList.addAll(apiResponseList)\r\n\r\n                        // Notificamos al adaptador que los datos han cambiado\r\n                        adapter.notifyDataSetChanged()\r\n\r\n                        Toast.makeText(context, \"Datos obtenidos exitosamente\", Toast.LENGTH_SHORT).show()\r\n\r\n                    } catch (e: Exception) {\r\n                        Log.e(\"JSON_ERROR\", \"Error al convertir el JSON: ${e.message}\")\r\n                        Toast.makeText(context, \"Error al procesar los datos\", Toast.LENGTH_SHORT).show()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n\r\n    companion object {\r\n        private const val ARG_PARAM1 = \"param1\"\r\n        private const val ARG_PARAM2 = \"param2\"\r\n\r\n        @JvmStatic\r\n        fun newInstance(param1: String, param2: String) =\r\n            Consulta1().apply {\r\n                arguments = Bundle().apply {\r\n                    putString(ARG_PARAM1, param1)\r\n                    putString(ARG_PARAM2, param2)\r\n                }\r\n            }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/hotelplayaparadise_appmovil/Consulta1.kt b/app/src/main/java/com/example/hotelplayaparadise_appmovil/Consulta1.kt
--- a/app/src/main/java/com/example/hotelplayaparadise_appmovil/Consulta1.kt	(revision 746036643a9b35df0cff9a6a2e246362ae1f3ccb)
+++ b/app/src/main/java/com/example/hotelplayaparadise_appmovil/Consulta1.kt	(date 1728419902626)
@@ -39,7 +39,7 @@
     override fun onCreateView(
         inflater: LayoutInflater, container: ViewGroup?,
         savedInstanceState: Bundle?
-    ): View? {
+    ): View {
         // Usamos ViewBinding para inflar el layout
         _binding = FragmentConsulta1Binding.inflate(inflater, container, false)
         val view = binding.root
